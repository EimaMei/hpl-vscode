{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "HOI4 Programming Language",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#types"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#integers"
    },
    {
      "include": "#floats"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#fstrings"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.hpl",
          "begin": "//",
          "end": "$",
          "patterns": [
            {
              "match": ".+"
            }
          ]
        },
        {
          "name": "comment.block.hpl",
          "begin": "/\\*",
          "end": ".*\\*/",
          "patterns": [
            {
              "match": ".+"
            }
          ]
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.string.hpl",
          "match": "\\bstring\\b"
        },
        {
          "name": "storage.type.int.hpl",
          "match": "\\bint\\b"
        },
        {
          "name": "storage.type.float.hpl",
          "match": "\\bfloat\\b"
        },
        {
          "name": "storage.type.bool.hpl",
          "match": "\\bbool\\b"
        },
        {
          "name": "storage.type.scope.hpl",
          "match": "\\bscope\\b"
        },
        {
          "name": "storage.type.auto.hpl",
          "match": "\\bauto\\b"
        },
        {
          "name": "storage.type.struct.hpl",
          "match": "\\bstruct\\b"
        }
      ]
    },
    "constants": {
      "name": "constant.language.hpl",
      "match": "\\b(true|false)\\b"
    },
    "integers": {
      "name": "constant.numeric.integer.hpl",
      "match": "\\b[0-9]+\\b"
    },
    "floats": {
      "name": "constant.numeric.float.hpl",
      "match": "\\b[0-9]*\\.[0-9]+\\b"
    },
    "functions": {
      "patterns": [
        {
          "name": "support.function.core.hpl",
          "match": "\\b(print|str|bool|int|float|createFolder|removeFolder|createFile|readFile|writeFile|writeToLine|writeToMultipleLines|removeFile|copyFile|writeLocalisation|convertToDds|pathExists|getFilenameFromPath|find|replaceAll|len|HPL_throwError)\\b"
        },
        {
          "name": "support.function.call.hpl",
          "match": "\\b([a-zA-Z_][a-zA-Z_0-9]*)\\("
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.hpl",
          "match": "\\b(if|return)\\b"
        },
        {
          "name": "keyword.control.include_read.hpl",
          "match": "#(include|read)\\b"
        },
        {
          "name": "keyword.operator.hpl",
          "match": "(\\+|\\-|\\*|\\/|\\%|\\!|\\=|\\<|\\>)"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.hpl",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.hpl",
          "match": "\\\\."
        }
      ]
    },
    "fstrings": {
      "name": "string.quoted.fstring.hpl",
      "begin": "f\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.hpl",
          "match": "\\\\."
        },
        {
          "name": "constant.other.placeholder.hpl",
          "match": "\\{[\\w\\(\\)\\[\\]\\.]+\\}"
        }
      ]
    }
  },
  "scopeName": "source.hpl"
}
